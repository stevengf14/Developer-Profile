import Head from 'next/head'
import { useEffect, useState } from 'react'
import axios from 'axios';
import Global from '../assets/Global';
import Header from '../src/components/Header'
import Repository from '../src/components/Repository';
import Profile from '../src/components/Profile';
import { SiLinkedin } from 'react-icons/si';
import { SiFacebook } from 'react-icons/si';
import { SiGithub } from 'react-icons/si';
import { SiInstagram } from 'react-icons/si';

export default function Home() {

  /* URLs services */
  const url_repositories = Global.repositories;
  const url_profile = Global.profile;
  
  /* Social Media*/
  const facebook = Global.faceboook;
  const instagram = Global.instagram;
  const linkedin = Global.linkedin;
  const git = Global.git; 

  /* states */
  const [repositories, setRepositories] = useState([]);
  const [profile, setProfile] = useState({});
  const [option, setOption] = useState('');

  const getProfile = () => {
    console.debug('Getting profile');
    axios.get(url_profile)
      .then(response => {
        if (response.status === 200) {
          setProfile({
            id: response.data.id,
            user: response.data.login,
            name: response.data.name,
            location: response.data.location,
            url: response.data.html_url,
            bio: response.data.bio,
            created: response.data.created_at,
            updated: response.data.updated_at
          });
        } else if (response.status !== 200) {
          console.debug('There is an error ' + response.status);
        }
      })
      .catch(error => {
        console.error('There is an error during get all repositories.');
      })
  }

  const getRepositories = () => {
    console.debug('Getting repositories');
    axios.get(url_repositories)
      .then(response => {
        if (response.status === 200) {
          const allRepos = response.data.map(repository => {
            return {
              id: repository.id,
              name: repository.name,
              full_name: repository.full_name,
              html_url: repository.html_url,
            }
          });
          setRepositories(allRepos);
        } else if (response.status !== 200) {
          console.debug('There is an error ' + response.status);
        }
      })
      .catch(error => {
        console.error('There is an error during get all repositories.');
      });
  }

  const changeOption = (event) => {
    event.preventDefault();
    const opt = event.target.name
    if (opt === option) {
      setOption('')
    } else if (opt === 'profile') {
      setOption('profile');
    } else if (opt === 'repositories') {
      setOption('repositories');
    }
  }

  useEffect(() => {
    getProfile();
    getRepositories();
  });

  return (
    <div className="columns has-background-link-light is-family-sans-serif">
      <div className="column is-three-fifths is-offset-one-fifth">
        <Head>
          <title>Developer Profile</title>
          <meta name="description" content="Generated by Steven Guamán" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="container">
          <Header />
          <div className="hero-foot">
            <nav className="tabs is-toggle is-fullwidth has-background-black">
              <div className="container">
                <ul>
                  <li><a className="has-text-white" name="profile" onClick={changeOption}>Profile</a></li>
                  <li><a className="has-text-white" name="repositories" onClick={changeOption}>Repositories</a></li>
                </ul>
              </div>
            </nav>
          </div>
          {
            option != '' ? (
              <div className="hero-body has-background-white">
                <div className="column">
                  {
                    option === 'profile' &&
                    <Profile profile={profile}></Profile>
                  }
                </div>
                <div className="column">
                  {
                    option === 'repositories' &&
                    repositories.map((repository, index) => <Repository repository={repository} key={`repository-${index}`}></Repository>)
                  }
                </div>
              </div>
            ) : (
              <div className="pb-6"></div>
            )
          }
        </main>
        <footer className="hero-foot is-align-items-end pt-6 pb-6">
          <p>
            <strong>Developer Profile</strong> by Steven Guamán. October 2021
          </p>
          <section className="pt-4">
            <div className="columns ">
              <div className="column is-1">
                <a href={linkedin} target="_blank" rel="noreferrer"><SiLinkedin /></a>
              </div>
              <div className="column is-1">
                <a href={git} target="_blank" rel="noreferrer"><SiGithub /></a>
              </div>
              <div className="column is-1">
                <a href={facebook} target="_blank" rel="noreferrer"><SiFacebook /></a>
              </div>
              <div className="column is-1">
                <a href={instagram} target="_blank" rel="noreferrer"><SiInstagram /></a>
              </div>
            </div>
          </section>
        </footer>
      </div>
    </div>
  )
}
